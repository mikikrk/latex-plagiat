<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="32" passed="32">
  <reporter-output>
  </reporter-output>
  <suite name="com.zpi.plagiarism_detector.server.data.MonitorTest" duration-ms="47" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
    <groups>
    </groups>
    <test name="Command line test a12d1616-fa61-4c7e-80ed-0d306889ab03" duration-ms="47" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
      <class name="com.zpi.plagiarism_detector.server.data.MonitorTest">
        <test-method status="PASS" signature="isNewFileIsNotCreatingFileTest()[pri:0, instance:com.zpi.plagiarism_detector.server.data.MonitorTest@6fadae5d]" name="isNewFileIsNotCreatingFileTest" duration-ms="47" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNewFileIsNotCreatingFileTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.data.MonitorTest@6fadae5d]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.data.MonitorTest@6fadae5d]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testFileEquality()[pri:0, instance:com.zpi.plagiarism_detector.server.data.MonitorTest@6fadae5d]" name="testFileEquality" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFileEquality -->
      </class> <!-- com.zpi.plagiarism_detector.server.data.MonitorTest -->
    </test> <!-- Command line test a12d1616-fa61-4c7e-80ed-0d306889ab03 -->
  </suite> <!-- com.zpi.plagiarism_detector.server.data.MonitorTest -->
  <suite name="com.zpi.plagiarism_detector.server.factories.core.ServerFactoryTest" duration-ms="78" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
    <groups>
    </groups>
    <test name="Command line test 01cda2ab-7c7b-4c3d-a9d3-9e1c5505cd39" duration-ms="78" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
      <class name="com.zpi.plagiarism_detector.server.factories.core.ServerFactoryTest">
        <test-method status="PASS" signature="testCreateWithCorrectParams()[pri:0, instance:com.zpi.plagiarism_detector.server.factories.core.ServerFactoryTest@28d25987]" name="testCreateWithCorrectParams" duration-ms="78" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateWithCorrectParams -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.factories.core.ServerFactoryTest@28d25987]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
      </class> <!-- com.zpi.plagiarism_detector.server.factories.core.ServerFactoryTest -->
    </test> <!-- Command line test 01cda2ab-7c7b-4c3d-a9d3-9e1c5505cd39 -->
  </suite> <!-- com.zpi.plagiarism_detector.server.factories.core.ServerFactoryTest -->
  <suite name="com.zpi.plagiarism_detector.server.database.ArticleTest" duration-ms="16" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
    <groups>
    </groups>
    <test name="Command line test 9edfb5ed-2bd8-4d37-95d9-f9b15175de53" duration-ms="16" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
      <class name="com.zpi.plagiarism_detector.server.database.ArticleTest">
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.database.ArticleTest@39aeed2f]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.database.ArticleTest@39aeed2f]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.database.ArticleTest@39aeed2f]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="equalityTest_otherReferencesNotEqual()[pri:0, instance:com.zpi.plagiarism_detector.server.database.ArticleTest@39aeed2f]" name="equalityTest_otherReferencesNotEqual" duration-ms="16" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalityTest_otherReferencesNotEqual -->
        <test-method status="PASS" signature="equalityTest_nullNotEqual()[pri:0, instance:com.zpi.plagiarism_detector.server.database.ArticleTest@39aeed2f]" name="equalityTest_nullNotEqual" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalityTest_nullNotEqual -->
        <test-method status="PASS" signature="equalityTest_objectNotEqual()[pri:0, instance:com.zpi.plagiarism_detector.server.database.ArticleTest@39aeed2f]" name="equalityTest_objectNotEqual" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalityTest_objectNotEqual -->
        <test-method status="PASS" signature="equalityTest_otherReferencesButEqual()[pri:0, instance:com.zpi.plagiarism_detector.server.database.ArticleTest@39aeed2f]" name="equalityTest_otherReferencesButEqual" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalityTest_otherReferencesButEqual -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.database.ArticleTest@39aeed2f]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="equalityTest_sameReferenceEqual()[pri:0, instance:com.zpi.plagiarism_detector.server.database.ArticleTest@39aeed2f]" name="equalityTest_sameReferenceEqual" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalityTest_sameReferenceEqual -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.database.ArticleTest@39aeed2f]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
      </class> <!-- com.zpi.plagiarism_detector.server.database.ArticleTest -->
    </test> <!-- Command line test 9edfb5ed-2bd8-4d37-95d9-f9b15175de53 -->
  </suite> <!-- com.zpi.plagiarism_detector.server.database.ArticleTest -->
  <suite name="com.zpi.plagiarism_detector.server.sourcecode.SourceCodeTest" duration-ms="185" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
    <groups>
    </groups>
    <test name="Command line test f1c372fb-b1ae-401b-9e6b-734d6421e2f4" duration-ms="185" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
      <class name="com.zpi.plagiarism_detector.server.sourcecode.SourceCodeTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.sourcecode.SourceCodeTest@5442a311]" name="initMocks" is-config="true" duration-ms="157" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:com.zpi.plagiarism_detector.server.sourcecode.SourceCodeTest@5442a311]" name="testAdd" duration-ms="15" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.sourcecode.SourceCodeTest@5442a311]" name="initMocks" is-config="true" duration-ms="1" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testAdd2()[pri:0, instance:com.zpi.plagiarism_detector.server.sourcecode.SourceCodeTest@5442a311]" name="testAdd2" duration-ms="3" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd2 -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.sourcecode.SourceCodeTest@5442a311]" name="initMocks" is-config="true" duration-ms="1" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testRecognizeLanguage()[pri:0, instance:com.zpi.plagiarism_detector.server.sourcecode.SourceCodeTest@5442a311]" name="testRecognizeLanguage" duration-ms="5" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecognizeLanguage -->
      </class> <!-- com.zpi.plagiarism_detector.server.sourcecode.SourceCodeTest -->
    </test> <!-- Command line test f1c372fb-b1ae-401b-9e6b-734d6421e2f4 -->
  </suite> <!-- com.zpi.plagiarism_detector.server.sourcecode.SourceCodeTest -->
  <suite name="com.zpi.plagiarism_detector.server.ServerPropertiesTest" duration-ms="15" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
    <groups>
    </groups>
    <test name="Command line test dda13ea9-5321-4d3e-ba7b-0a60a54138b0" duration-ms="15" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
      <class name="com.zpi.plagiarism_detector.server.ServerPropertiesTest">
        <test-method status="PASS" signature="testRefleciton()[pri:0, instance:com.zpi.plagiarism_detector.server.ServerPropertiesTest@685cb137]" name="testRefleciton" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRefleciton -->
      </class> <!-- com.zpi.plagiarism_detector.server.ServerPropertiesTest -->
    </test> <!-- Command line test dda13ea9-5321-4d3e-ba7b-0a60a54138b0 -->
  </suite> <!-- com.zpi.plagiarism_detector.server.ServerPropertiesTest -->
  <suite name="com.zpi.plagiarism_detector.server.data.ServerDataTest" duration-ms="98" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
    <groups>
    </groups>
    <test name="Command line test 781f15d2-8746-4985-85d1-a803eba72a09" duration-ms="98" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
      <class name="com.zpi.plagiarism_detector.server.data.ServerDataTest">
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="beforePowerMockTestMethod" is-config="true" duration-ms="47" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="beforePowerMockTestClass" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="init" is-config="true" duration-ms="16" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="getCommonKeywordDocuments_NonEmptyKeywordSet()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="getCommonKeywordDocuments_NonEmptyKeywordSet" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCommonKeywordDocuments_NonEmptyKeywordSet -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="saveDocument_NonNullDocWithoutCodesSuccessTest()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="saveDocument_NonNullDocWithoutCodesSuccessTest" duration-ms="20" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveDocument_NonNullDocWithoutCodesSuccessTest -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="saveDocument_articleWithNameThatExists_AddPostfixSuccessTest()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="saveDocument_articleWithNameThatExists_AddPostfixSuccessTest" duration-ms="2" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveDocument_articleWithNameThatExists_AddPostfixSuccessTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="init" is-config="true" duration-ms="1" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="saveDocument_nullArgExceptionTest()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="saveDocument_nullArgExceptionTest" duration-ms="1" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.zpi.plagiarism_detector.server.data.ServerData.extractFields(ServerData.java:61)
	at com.zpi.plagiarism_detector.server.data.ServerData.saveDocument(ServerData.java:49)
	at com.zpi.plagiarism_detector.server.data.ServerDataTest.saveDocument_nullArgExceptionTest(ServerDataTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:91)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:204)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:107)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveDocument_nullArgExceptionTest -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="saveDocument_withDocumentAndCodesSuccessTest()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="saveDocument_withDocumentAndCodesSuccessTest" duration-ms="2" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveDocument_withDocumentAndCodesSuccessTest -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="saveDocument_withNullArticleAndCodesSuccessTest()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="saveDocument_withNullArticleAndCodesSuccessTest" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveDocument_withNullArticleAndCodesSuccessTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="afterPowerMockTestClass" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.zpi.plagiarism_detector.server.data.ServerDataTest@482f8f11]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
      </class> <!-- com.zpi.plagiarism_detector.server.data.ServerDataTest -->
    </test> <!-- Command line test 781f15d2-8746-4985-85d1-a803eba72a09 -->
  </suite> <!-- com.zpi.plagiarism_detector.server.data.ServerDataTest -->
  <suite name="com.zpi.plagiarism_detector.server.detector.PlagiarismDetectorTest" duration-ms="16" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
    <groups>
    </groups>
    <test name="Command line test 015de4c3-6453-4675-8113-f0e30501ec6a" duration-ms="16" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
      <class name="com.zpi.plagiarism_detector.server.detector.PlagiarismDetectorTest">
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.detector.PlagiarismDetectorTest@55f3ddb1]" name="init" is-config="true" duration-ms="16" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="checkForPlagiarism_nullDocumentThrowsNullPointerExceptionTest()[pri:0, instance:com.zpi.plagiarism_detector.server.detector.PlagiarismDetectorTest@55f3ddb1]" name="checkForPlagiarism_nullDocumentThrowsNullPointerExceptionTest" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.zpi.plagiarism_detector.server.detector.PlagiarismDetector.extractData(PlagiarismDetector.java:50)
	at com.zpi.plagiarism_detector.server.detector.PlagiarismDetector.checkForPlagiarism(PlagiarismDetector.java:30)
	at com.zpi.plagiarism_detector.server.detector.PlagiarismDetectorTest.checkForPlagiarism_nullDocumentThrowsNullPointerExceptionTest(PlagiarismDetectorTest.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:91)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:204)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:107)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForPlagiarism_nullDocumentThrowsNullPointerExceptionTest -->
      </class> <!-- com.zpi.plagiarism_detector.server.detector.PlagiarismDetectorTest -->
    </test> <!-- Command line test 015de4c3-6453-4675-8113-f0e30501ec6a -->
  </suite> <!-- com.zpi.plagiarism_detector.server.detector.PlagiarismDetectorTest -->
  <suite name="com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest" duration-ms="0" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
    <groups>
    </groups>
    <test name="Command line test a802ee7e-9692-4afd-a686-2acba152686d" duration-ms="0" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
      <class name="com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest">
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest@6f7fd0e6]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="dispatchMessage_messagePlagiarismCheckWithAllParametersReturnCorrectResultTest()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest@6f7fd0e6]" name="dispatchMessage_messagePlagiarismCheckWithAllParametersReturnCorrectResultTest" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dispatchMessage_messagePlagiarismCheckWithAllParametersReturnCorrectResultTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest@6f7fd0e6]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="dispatchMessage_messagePlagiarismCheckWithNullMessageReturnsErrorResponseTest()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest@6f7fd0e6]" name="dispatchMessage_messagePlagiarismCheckWithNullMessageReturnsErrorResponseTest" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dispatchMessage_messagePlagiarismCheckWithNullMessageReturnsErrorResponseTest -->
        <test-method status="PASS" signature="dispatchMessage_nullMessageFailureTest()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest@6f7fd0e6]" name="dispatchMessage_nullMessageFailureTest" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.zpi.plagiarism_detector.server.handlers.MessageDispatcher.dispatchMessage(MessageDispatcher.java:29)
	at com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest.dispatchMessage_nullMessageFailureTest(MessageDispatcherTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:91)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:204)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:107)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dispatchMessage_nullMessageFailureTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest@6f7fd0e6]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest@6f7fd0e6]" name="init" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="equalityTest()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest@6f7fd0e6]" name="equalityTest" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalityTest -->
      </class> <!-- com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest -->
    </test> <!-- Command line test a802ee7e-9692-4afd-a686-2acba152686d -->
  </suite> <!-- com.zpi.plagiarism_detector.server.handlers.MessageDispatcherTest -->
  <suite name="com.zpi.plagiarism_detector.server.handlers.MessageHandlerTest" duration-ms="32" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
    <groups>
    </groups>
    <test name="Command line test c05da92f-9905-4a82-87ac-7a6f75f4b487" duration-ms="32" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
      <class name="com.zpi.plagiarism_detector.server.handlers.MessageHandlerTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageHandlerTest@3bfdc050]" name="initMocks" is-config="true" duration-ms="16" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tryReadMessageClassNotFoundTest()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageHandlerTest@3bfdc050]" name="tryReadMessageClassNotFoundTest" duration-ms="16" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryReadMessageClassNotFoundTest -->
        <test-method status="PASS" signature="tryReadMessageIOExceptionTest()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageHandlerTest@3bfdc050]" name="tryReadMessageIOExceptionTest" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryReadMessageIOExceptionTest -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.MessageHandlerTest@3bfdc050]" name="initMocks" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
      </class> <!-- com.zpi.plagiarism_detector.server.handlers.MessageHandlerTest -->
    </test> <!-- Command line test c05da92f-9905-4a82-87ac-7a6f75f4b487 -->
  </suite> <!-- com.zpi.plagiarism_detector.server.handlers.MessageHandlerTest -->
  <suite name="com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest" duration-ms="47" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
    <groups>
    </groups>
    <test name="Command line test c6a04830-0260-40d9-8ab4-9c9be33167d5" duration-ms="47" started-at="2014-11-26T06:26:57Z" finished-at="2014-11-26T06:26:57Z">
      <class name="com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest">
        <test-method status="PASS" signature="createMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest@5e5792a0]" name="createMocks" is-config="true" duration-ms="16" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMocks -->
        <test-method status="PASS" signature="createMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest@5e5792a0]" name="createMocks" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMocks -->
        <test-method status="PASS" signature="freeHandlerResourcesNullMessageHandlerTest()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest@5e5792a0]" name="freeHandlerResourcesNullMessageHandlerTest" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeHandlerResourcesNullMessageHandlerTest -->
        <test-method status="PASS" signature="runClassNotFoundExceptionTest()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest@5e5792a0]" name="runClassNotFoundExceptionTest" duration-ms="16" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runClassNotFoundExceptionTest -->
        <test-method status="PASS" signature="createMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest@5e5792a0]" name="createMocks" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMocks -->
        <test-method status="PASS" signature="freeHandlerResourcesClientSocketIOExceptionTest()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest@5e5792a0]" name="freeHandlerResourcesClientSocketIOExceptionTest" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeHandlerResourcesClientSocketIOExceptionTest -->
        <test-method status="PASS" signature="createMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest@5e5792a0]" name="createMocks" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMocks -->
        <test-method status="PASS" signature="runIOExceptionTest()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest@5e5792a0]" name="runIOExceptionTest" duration-ms="15" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runIOExceptionTest -->
        <test-method status="PASS" signature="runSuccessTest()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest@5e5792a0]" name="runSuccessTest" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runSuccessTest -->
        <test-method status="PASS" signature="createMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest@5e5792a0]" name="createMocks" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMocks -->
      </class> <!-- com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest -->
    </test> <!-- Command line test c6a04830-0260-40d9-8ab4-9c9be33167d5 -->
  </suite> <!-- com.zpi.plagiarism_detector.server.handlers.ConnectionHandlerTest -->
  <suite name="com.zpi.plagiarism_detector.server.core.ServerTest" duration-ms="1113" started-at="2014-11-26T06:26:56Z" finished-at="2014-11-26T06:26:57Z">
    <groups>
    </groups>
    <test name="Command line test 5bb99cff-1501-47ac-a294-34223d6adce6" duration-ms="1113" started-at="2014-11-26T06:26:56Z" finished-at="2014-11-26T06:26:57Z">
      <class name="com.zpi.plagiarism_detector.server.core.ServerTest">
        <test-method status="PASS" signature="createMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.core.ServerTest@2f7c7260]" name="createMocks" is-config="true" duration-ms="516" started-at="2014-11-26T07:26:56Z" finished-at="2014-11-26T07:26:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMocks -->
        <test-method status="PASS" signature="handleConnectionsException()[pri:0, instance:com.zpi.plagiarism_detector.server.core.ServerTest@2f7c7260]" name="handleConnectionsException" duration-ms="551" started-at="2014-11-26T07:26:56Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleConnectionsException -->
        <test-method status="PASS" signature="handleConnectionsInterruptTest()[pri:0, instance:com.zpi.plagiarism_detector.server.core.ServerTest@2f7c7260]" name="handleConnectionsInterruptTest" duration-ms="31" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleConnectionsInterruptTest -->
        <test-method status="PASS" signature="createMocks()[pri:0, instance:com.zpi.plagiarism_detector.server.core.ServerTest@2f7c7260]" name="createMocks" is-config="true" duration-ms="0" started-at="2014-11-26T07:26:57Z" finished-at="2014-11-26T07:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMocks -->
      </class> <!-- com.zpi.plagiarism_detector.server.core.ServerTest -->
    </test> <!-- Command line test 5bb99cff-1501-47ac-a294-34223d6adce6 -->
  </suite> <!-- com.zpi.plagiarism_detector.server.core.ServerTest -->
</testng-results>
